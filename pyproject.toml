[build-system]
requires = [
    "hatchling>=1.3.1",
    "jupyterlab==3.*",
]
build-backend = "hatchling.build"

[project]
name = "nglview"
description = "IPython widget to interactively view molecular structures and trajectories."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.6"
authors = [
    { name = "Alexander S. Rose", email = "alexander.rose@weirdbyte.de" },
    { name = "Hai Nguyen" },
]
keywords = [
    "IPython",
    "Jupyter",
    "Widgets",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: IPython",
    "Framework :: Jupyter",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: JavaScript",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Visualization",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
]
dependencies = [
    "ipywidgets>=7.0.0",
]
dynamic = [
    "version",
]

[project.optional-dependencies]
simpletraj = ["simpletraj"]
mdtraj = ["mdtraj"]
pytraj = ["pytraj"]
mdanalysis = ["MDAnalysis"]
parmed = ["ParmEd"]
rdkit = ["rdkit"]
ase = ["ase"]
htmd = ["htmd"]
qcelemental = ["qcelemental"]

# examples = []

[project.urls]
Homepage = "https://github.com/nglviewer/nglview"

[project.scripts]
nglview = "nglview.scripts.nglview:main"

[tool.hatch.version]
path = "nglview/_version.py"

[tool.hatch.build]
artifacts = [
    "nglview/nbextension/index.*",
    "nglview/labextension/*.tgz",
    "nglview/labextension",
]

[tool.hatch.build.targets.wheel.shared-data]
"nglview/nbextension" = "share/jupyter/nbextensions/nglview-js-widgets"
"nglview/labextension" = "share/jupyter/labextensions/nglview-js-widgets"
"./install.json" = "share/jupyter/labextensions/nglview-js-widgets/install.json"
"./nglview.json" = "etc/jupyter/nbconfig/notebook.d/nglview.json"

[tool.hatch.build.targets.sdist]
exclude = [
    ".github",
]

[tool.hatch.build.hooks.jupyter-builder]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "nglview/nbextension/index.js",
    "nglview/labextension/package.json",
]
skip-if-exists = [
    "nglview/nbextension/index.js",
    "nglview/labextension/package.json",
]
dependencies = [
    "hatch-jupyter-builder>=0.5.0",
]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
path = "."
npm = "jlpm"  # https://github.com/jupyter-widgets/widget-ts-cookiecutter/pull/128
build_cmd = "build:prod"

[tool.hatch.envs.docs]
dependencies = [
    "jupyter_sphinx",
    "nbsphinx",
    "nbsphinx-link",
    "pypandoc",
    "pytest_check_links",
    "recommonmark",
    "sphinx>=1.5",
    "sphinx_rtd_theme",
]

[tool.hatch.envs.test]
dependencies = [
    "ase",
    "mock",  # TODO: use `unittest.mock` instead
    "moviepy",
    "nbval",
    "parmed",
    "pillow",
    "simpletraj",
    "pytest-cov",
    "pytest>=6.0",
]

[tool.pytest.ini_options]
# TODO: Avoid setting PYTHONPATH
pythonpath = "nglview/tests"
# TODO: enable --nbval: Run Jupyter notebooks, validating all output
testpaths = [
    "nglview/tests",
    # "examples",
]
norecursedirs = [
    "node_modules",
    ".ipynb_checkpoints",
]
# addopts = "--nbval --current-env"
